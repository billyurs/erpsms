
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.nfc.Tag;
import android.os.Bundle;
import android.provider.SyncStateContract;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;

import android.content.Intent;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.widget.Toast;

import com.example.sweety.aceapplication.DataBase.DataStoreAndAccessClass;
import com.example.sweety.aceapplication.ServerClass.HttpRequestAndResponse;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.params.HttpClientParams;
import org.apache.http.client.protocol.ClientContext;
import org.apache.http.cookie.Cookie;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.BasicCookieStore;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.cookie.BasicClientCookie;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HttpContext;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.net.Authenticator;
import java.net.CookieHandler;
import java.net.CookieManager;
import java.net.CookieStore;
import java.net.HttpCookie;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.PasswordAuthentication;
import java.net.Proxy;
import java.net.URL;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Objects;

public class LoginActivity extends AppCompatActivity {
    private static final String TAG = "LoginActivity";
    final String L_URL="http://erpforppl.pythonanywhere.com/login";
    private static final int REQUEST_SIGNUP = 0;
    EditText _emailText;
    EditText _passwordText;
    Button _loginButton;
    TextView _signupLink;
    CheckBox _remember;
    String email;
    String password;
    DataStoreAndAccessClass db;
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        _emailText=(EditText)findViewById(R.id.input_email);
        _passwordText=(EditText)findViewById(R.id.input_password);
        _loginButton=(Button)findViewById(R.id.btn_login);
        _signupLink=(TextView)findViewById(R.id.link_signup);
        _remember=(CheckBox)findViewById(R.id.remember);
        db=new DataStoreAndAccessClass(this);
        _loginButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                final Boolean value=login();
                Boolean CheckedValue=false;
                if(value)
                {
                    Log.e(TAG, "Login---->Value: " + value);
                    login(email, password);
                }
                else
                {
                    Toast.makeText(LoginActivity.this,"Invalid! Please Enter the Credentials",Toast.LENGTH_LONG).show();
                }
            }
        });

        _signupLink.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                // Start the Signup activity
                Intent intent = new Intent(getApplicationContext(), SignupActivity.class);
                Log.e(TAG,"Login---->SignUp Value: "+intent);
                startActivityForResult(intent, REQUEST_SIGNUP);
            }
        });
    }

    public boolean login() {
        Log.d(TAG, "Login");
        Boolean validate=validate();
        return validate;
    }
    @Override
    public void onBackPressed() {
        // disable going back to the MainActivity
        moveTaskToBack(true);
    }
    public boolean validate() {
        boolean valid = true;

        email = _emailText.getText().toString();
        password = _passwordText.getText().toString();

        if (email.isEmpty() || !android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
            _emailText.setError("enter a valid email address");
            valid = false;
            Log.e(TAG,"Login---->Validate() Email Value: "+email);
        }
        else
        {
            _emailText.setError(null);
        }
        if (password.isEmpty() || password.length() < 4 || password.length() > 10) {
            _passwordText.setError("between 4 and 10 alphanumeric characters");
            valid = false;
            Log.e(TAG,"Login---->Validate() Email password Value: "+password);
        } else {
            _passwordText.setError(null);
        }
        return valid;
    }
    private void login(final String username, String password) {

        class LoginAsync extends AsyncTask<String, Void, String>{
            boolean responseFromServer;
            private Dialog loadingDialog;

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                loadingDialog = ProgressDialog.show(LoginActivity.this, "Please wait", "Authenticating...");
            }

            @Override
            protected String doInBackground(String... params) {
                String uname = params[0];
                String pass = params[1];

                InputStream is = null;
                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
                nameValuePairs.add(new BasicNameValuePair("username",uname));
                nameValuePairs.add(new BasicNameValuePair("password",pass));
                nameValuePairs.add(new BasicNameValuePair("flavor","android"));
                String result = null;
                Log.e(TAG,"Login---->List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(); "+nameValuePairs.toString());
                try {
                    HttpClient httpClient = new DefaultHttpClient();
                    Log.e(TAG,"Login---->LoginAsync class HttpClientObject Created: "+httpClient);

                    HttpPost httpPost = new HttpPost(L_URL);
                    Log.e(TAG,"Login---->LoginAsync class HttpPostObject Created: "+httpPost);

                    httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));

                    HttpResponse response = httpClient.execute(httpPost);
                    Log.e(TAG,"Login---->LoginAsync class HttpResponse Created: "+response);

                    HttpEntity entity = response.getEntity();
                    Log.e(TAG,"Login---->LoginAsync class HttpEntity Respose: "+entity);

                    is = entity.getContent();

                    BufferedReader reader = new BufferedReader(new InputStreamReader(is, "UTF-8"), 8);
                    StringBuilder sb = new StringBuilder();

                    String line = null;
                    while ((line = reader.readLine()) != null)
                    {
                        sb.append(line + "\n");
                    }
                    result = sb.toString();
                    Log.e(TAG,"Login----> "+result);
                } catch (ClientProtocolException e) {
                    e.printStackTrace();
                } catch (UnsupportedEncodingException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                return result;
            }

            @Override
            protected void onPostExecute(String result){
                String s = result.trim();
                String[] ExpectedValue=new String[4];
                ExpectedValue[0]="{"+"\""+"msg"+"\""+": ";
                ExpectedValue[1]="\""+"Login Success"+"\""+", ";
                ExpectedValue[2]="\""+"success"+"\""+": ";
                ExpectedValue[3]= "true"+"}";
                if(s.equals(ExpectedValue[0]+ExpectedValue[1]+ExpectedValue[2]+ExpectedValue[3]))
                {
                    loadingDialog.dismiss();
                    Intent intent = new Intent(LoginActivity.this, LoggedIn.class);
                    intent.putExtra("USER_NAME", _emailText.getText().toString());
                    startActivity(intent);
                }else
                {
                    loadingDialog.dismiss();
                    Toast.makeText(LoginActivity.this, "Invalid User Name or Password", Toast.LENGTH_LONG).show();
                }
            }
        }
        LoginAsync la = new LoginAsync();
        la.execute(username, password);
    }
}